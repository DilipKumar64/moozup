generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  firstName      String?
  lastName       String?
  email          String    @unique
  password       String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           String?   @default("user")
  status         Boolean   @default(true)
  profilePicture String?
  dateOfBirth    DateTime?
  gender         String?
  addressLine1   String?
  addressLine2   String?
  city           String?
  state          String?
  zipCode        String?
  phoneNumber    String?
  phoneExtension String?
  language       String?
  country        String?

  events Event[]
  // joinedEvents JoinEvent[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  location    String
  date        DateTime
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // attendees JoinEvent[]

  @@unique([title, date])
}

// model JoinEvent {
//   id        Int      @id @default(autoincrement())
//   userId    Int
//   eventId   Int
//   createdAt DateTime @default(now())

//   // Relation to User (User model)
//   user User @relation(fields: [userId], references: [id])

//   // Relation to Event
//   event Event @relation(fields: [eventId], references: [id])

//   // Unique constraint to prevent duplicate joins
//   @@unique([userId, eventId]) // Ensure user can't join the same event more than once
// }
