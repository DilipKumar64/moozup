generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  events    Event[]  
  joinedEvents JoinEvent[]  // Users ke events join karne ki relationship
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  location    String
  date        DateTime
  creatorId   Int
  creator     Auth     @relation(fields: [creatorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([title, date]) 

  // JoinEvent table ke through relationship define hoga
  attendees   JoinEvent[] 
}

model JoinEvent {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now())

  // Relation to User (Auth model)
  user      Auth     @relation(fields: [userId], references: [id])

  // Relation to Event
  event     Event    @relation(fields: [eventId], references: [id])

  // Unique constraint to prevent duplicate joins
  @@unique([userId, eventId])  // Ensure user can't join the same event more than once
}
